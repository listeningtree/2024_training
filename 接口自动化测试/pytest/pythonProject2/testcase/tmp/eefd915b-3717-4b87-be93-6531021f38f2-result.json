{"name": "test_01_baili[args0]", "status": "broken", "statusDetails": {"message": "UnicodeEncodeError: 'ascii' codec can't encode characters in position 10-12: ordinal not in range(128)", "trace": "self = <test_research.TestResearch object at 0x00000175830A2048>\nargs = {'name': '输入100以内个字符（不包括100字符），可以正常输入', 'request': {'headers': {'Accept': 'text/html,application/xhtml+xml,application...com/s'}, 'test': '好好学习好好学习好好好好学习好好学习好好好好学习好好学习好好好好学习好好学习好好好好学习好好学习好好好好学习好好学习好好好好学习好好学习好好好好学习好好学习好好好好学习好好学习好好好好学习好好学习好'}\n\n    @pytest.mark.parametrize('args',YamlUtil(os.getcwd()+'\\\\test_api.yaml').read_yaml())\n    def test_01_baili(self,args):\n        headers = {\n            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36 Edg/83.0.478.50',\n            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9'\n        }\n        url = \"https://www.baidu.com/s?wd=孙悟空\"\n    \n        req = urllib.request.Request(url=url, headers=headers)\n>       html = urllib.request.urlopen(req).read().decode('UTF-8', 'ignore')\n\ntest_research.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\13601\\AppData\\Local\\Programs\\Python\\Python37\\lib\\urllib\\request.py:222: in urlopen\n    return opener.open(url, data, timeout)\nC:\\Users\\13601\\AppData\\Local\\Programs\\Python\\Python37\\lib\\urllib\\request.py:525: in open\n    response = self._open(req, data)\nC:\\Users\\13601\\AppData\\Local\\Programs\\Python\\Python37\\lib\\urllib\\request.py:543: in _open\n    '_open', req)\nC:\\Users\\13601\\AppData\\Local\\Programs\\Python\\Python37\\lib\\urllib\\request.py:503: in _call_chain\n    result = func(*args)\nC:\\Users\\13601\\AppData\\Local\\Programs\\Python\\Python37\\lib\\urllib\\request.py:1360: in https_open\n    context=self._context, check_hostname=self._check_hostname)\nC:\\Users\\13601\\AppData\\Local\\Programs\\Python\\Python37\\lib\\urllib\\request.py:1317: in do_open\n    encode_chunked=req.has_header('Transfer-encoding'))\nC:\\Users\\13601\\AppData\\Local\\Programs\\Python\\Python37\\lib\\http\\client.py:1229: in request\n    self._send_request(method, url, body, headers, encode_chunked)\nC:\\Users\\13601\\AppData\\Local\\Programs\\Python\\Python37\\lib\\http\\client.py:1240: in _send_request\n    self.putrequest(method, url, **skips)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <http.client.HTTPSConnection object at 0x00000175830A2BE0>\nmethod = 'GET', url = '/s?wd=孙悟空', skip_host = 1, skip_accept_encoding = False\n\n    def putrequest(self, method, url, skip_host=False,\n                   skip_accept_encoding=False):\n        \"\"\"Send a request to the server.\n    \n        `method' specifies an HTTP request method, e.g. 'GET'.\n        `url' specifies the object being requested, e.g. '/index.html'.\n        `skip_host' if True does not add automatically a 'Host:' header\n        `skip_accept_encoding' if True does not add automatically an\n           'Accept-Encoding:' header\n        \"\"\"\n    \n        # if a prior response has been completed, then forget about it.\n        if self.__response and self.__response.isclosed():\n            self.__response = None\n    \n    \n        # in certain cases, we cannot issue another request on this connection.\n        # this occurs when:\n        #   1) we are in the process of sending a request.   (_CS_REQ_STARTED)\n        #   2) a response to a previous request has signalled that it is going\n        #      to close the connection upon completion.\n        #   3) the headers for the previous response have not been read, thus\n        #      we cannot determine whether point (2) is true.   (_CS_REQ_SENT)\n        #\n        # if there is no prior response, then we can request at will.\n        #\n        # if point (2) is true, then we will have passed the socket to the\n        # response (effectively meaning, \"there is no prior response\"), and\n        # will open a new one when a new request is made.\n        #\n        # Note: if a prior response exists, then we *can* start a new request.\n        #       We are not allowed to begin fetching the response to this new\n        #       request, however, until that prior response is complete.\n        #\n        if self.__state == _CS_IDLE:\n            self.__state = _CS_REQ_STARTED\n        else:\n            raise CannotSendRequest(self.__state)\n    \n        # Save the method we use, we need it later in the response phase\n        self._method = method\n        if not url:\n            url = '/'\n        request = '%s %s %s' % (method, url, self._http_vsn_str)\n    \n        # Non-ASCII characters should have been eliminated earlier\n>       self._output(request.encode('ascii'))\nE       UnicodeEncodeError: 'ascii' codec can't encode characters in position 10-12: ordinal not in range(128)\n\nC:\\Users\\13601\\AppData\\Local\\Programs\\Python\\Python37\\lib\\http\\client.py:1107: UnicodeEncodeError"}, "parameters": [{"name": "args", "value": "{'name': '输入100以内个字符（不包括100字符），可以正常输入', 'request': {'url': 'https://www.baidu.com/s', 'method': 'get', 'headers': {'Content-Type': 'application/json', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36 Edg/83.0.478.50', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9'}, 'params': {'wd': '好好学习好好学习好好好好学习好好学习好好好好学习好好学习好好好好学习好好学习好好好好学习好好学习好好好好学习好好学习好好好好学习好好学习好好好好学习好好学习好好好好学习好好学习好好好好学习好好学习好', 'usm': 3, 'rsv_idx': 2, 'rsv_page': 1}}, 'test': '好好学习好好学习好好好好学习好好学习好好好好学习好好学习好好好好学习好好学习好好好好学习好好学习好好好好学习好好学习好好好好学习好好学习好好好好学习好好学习好好好好学习好好学习好好好好学习好好学习好'}"}], "start": 1719199338597, "stop": 1719199338696, "uuid": "7eade2e8-9c5f-4f56-b9d3-5905e2ece011", "historyId": "cfb2c6955ced765720cc4d9af9db537d", "testCaseId": "7b939fd8aa016c0e835658ceff2d53b4", "fullName": "testcase.test_research.TestResearch#test_01_baili", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_research"}, {"name": "subSuite", "value": "TestResearch"}, {"name": "host", "value": "LAPTOP-UB0CHATK"}, {"name": "thread", "value": "2500-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_research"}]}