{"name": "test_01_baili[args1]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'bds.comm.queryEnc = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";' in '<html>\\r\\n<head>\\r\\n\\t<script>\\r\\n\\t\\tlocation.replace(location.href.replace(\"https://\",\"http://\"));\\r\\n\\t</script>\\r\\n</head>\\r\\n<body>\\r\\n\\t<noscript><meta http-equiv=\"refresh\" content=\"0;url=http://www.baidu.com/\"></noscript>\\r\\n</body>\\r\\n</html>'\n +  where 'bds.comm.queryEnc = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";' = <built-in method get of dict object at 0x0000018ECD048990>('test')\n +    where <built-in method get of dict object at 0x0000018ECD048990> = {'name': '输入100字符，可以正常输入', 'request': {'headers': {'Content-Type': 'application/json'}, 'method': 'get', 'url': 'https://www.baidu.com/s?wd=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'}, 'test': 'bds.comm.queryEnc = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";'}.get", "trace": "self = <test_research.TestResearch object at 0x0000018ECD083390>\nargs = {'name': '输入100字符，可以正常输入', 'request': {'headers': {'Content-Type': 'application/json'}, 'method': 'get', 'url': 'https...mm.queryEnc = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";'}\n\n    @pytest.mark.parametrize('args',YamlUtil(os.getcwd()+'\\\\test_api.yaml').read_yaml())\n    def test_01_baili(self,args):\n        url = args['request']['url']\n        headers=args['request']['headers']\n        req = urllib.request.Request(url,headers=headers)\n        html = urllib.request.urlopen(req).read().decode('UTF-8', 'ignore')\n        #print(html)\n>       assert args.get('test') in html\nE       assert 'bds.comm.queryEnc = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";' in '<html>\\r\\n<head>\\r\\n\\t<script>\\r\\n\\t\\tlocation.replace(location.href.replace(\"https://\",\"http://\"));\\r\\n\\t</script>\\r\\n</head>\\r\\n<body>\\r\\n\\t<noscript><meta http-equiv=\"refresh\" content=\"0;url=http://www.baidu.com/\"></noscript>\\r\\n</body>\\r\\n</html>'\nE        +  where 'bds.comm.queryEnc = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";' = <built-in method get of dict object at 0x0000018ECD048990>('test')\nE        +    where <built-in method get of dict object at 0x0000018ECD048990> = {'name': '输入100字符，可以正常输入', 'request': {'headers': {'Content-Type': 'application/json'}, 'method': 'get', 'url': 'https://www.baidu.com/s?wd=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'}, 'test': 'bds.comm.queryEnc = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";'}.get\n\ntest_research.py:19: AssertionError"}, "parameters": [{"name": "args", "value": "{'name': '输入100字符，可以正常输入', 'request': {'url': 'https://www.baidu.com/s?wd=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'method': 'get', 'headers': {'Content-Type': 'application/json'}}, 'test': 'bds.comm.queryEnc = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";'}"}], "start": 1719240035664, "stop": 1719240035865, "uuid": "1bbd427f-8f15-49eb-ac6c-058a29362dea", "historyId": "b73c483cd223d322c214f6479838a847", "testCaseId": "7b939fd8aa016c0e835658ceff2d53b4", "fullName": "testcase.test_research.TestResearch#test_01_baili", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_research"}, {"name": "subSuite", "value": "TestResearch"}, {"name": "host", "value": "LAPTOP-UB0CHATK"}, {"name": "thread", "value": "15012-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_research"}]}